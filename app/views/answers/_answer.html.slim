- if answer.persisted?
  div id=answer.id class=('best' if answer.best)
    p= answer.body
    div class="answer-#{answer.id}"
      .vote
        - if user_signed_in?
          = render partial: 'votes/vote', locals: { resource: answer }

    - if answer.files.attached?
      - answer.files.each do |file|
        div id=file.id class='file'
          p= link_to file.filename.to_s, url_for(file)
          - if current_user&.its_author?(answer)
            p= link_to 'Delete answer attachment', attachment_path(file), method: :delete, remote: true
    .answer-comments class="comments-#{answer.id}"
      - if user_signed_in?
        = render partial: 'comments/comment_form', locals: { resource: answer }
        = render answer.comments

    - unless answer.links.empty?
      .links
        p Links:
        ul
        - answer.links.each do |link|
          - if link.persisted?
            div id=link.id
              - if gist?(link[:url])
                - GistService.new(link[:url]).content.each do |gist_file|
                  div= gist_file[:file_name]
                  div= gist_file[:file_content]
              - else
                li= link_to link.name, link.url
              - if current_user&.its_author?(@question)
                =link_to "Delete link", link_path(link), method: :delete, remote: true

    - if current_user&.its_author?(answer)
      = link_to 'Edit answer', '#', class: 'edit-answer-link', data: { answer_id: answer.id }, remote: true
      | |
      = link_to 'Delete answer', answer, method: :delete, remote: true
      | |
      = form_with model: answer, class: 'hidden', html: { id: "edit-answer-#{answer.id}" } do |f|
        p
          = f.label :body, 'Your answer'
          = f.text_area :body
        p
          = f.label :files
          = f.file_field :files, multiple: true, direct_upload: true
        p= f.submit "Save"
    - if current_user&.its_author?(answer.question)
      = link_to 'Mark as best answer', mark_as_best_answer_path(answer), class: 'mark-as-best', data: { answer_id: answer.id }, method: :patch, remote: true
